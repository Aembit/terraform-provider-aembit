# Terraform Provider Testing Build workflow.
name: Build for QA
on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

# Releases need permissions to read and write the repository contents.
# GitHub considers creating releases and uploading assets as writing contents.
permissions:
  contents: write

# Ensure only one workflow run at a time
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  goreleaser:
    name: GoReleaser Build for QA
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.SUBMODULE_CHECKOUT_TOKEN }}
          submodules: recursive
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: '~> v2'
          args: build --snapshot --clean 
      - name: Archive QA Build
        uses: actions/upload-artifact@v4
        with:
          name: terraform-provider-aembit
          path: dist
          retention-days: 14

  docs:
    name: Generate Docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.SUBMODULE_CHECKOUT_TOKEN }}
          submodules: recursive
      - uses: hashicorp/setup-terraform@v3
      - uses: actions/setup-go@v5 # v5.x
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go generate ./...
      - name: git diff
        run: |
          git diff --compact-summary --ignore-space-at-eol --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)
      - name: Archive QA Docs
        uses: actions/upload-artifact@v4
        with:
          name: terraform-provider-aembit-docs
          path: docs
          retention-days: 14
  
  validate:
    name: Validate Build/Merge
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.SUBMODULE_CHECKOUT_TOKEN }}
          submodules: recursive

      # These Job Steps verify that the Aembit submodules are up to date with main
      - name: Check Submodule aembit_api_client
        run: |
          git submodule status
          BRANCH=$(git submodule status | grep "aembit_api_client" | awk -F ' ' '{print $3}')
          if [ "${BRANCH}" != "(heads/main)" ]; then
            printf "aembit_api_client is currently on the ${s} branch and needs to be updated\n"
            exit 1
          fi